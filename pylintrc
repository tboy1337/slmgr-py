[MASTER]
# Use multiple processes to speed up Pylint
jobs=0

# Pickle collected data for later comparisons
persistent=yes

# Allow loading of arbitrary C extensions
unsafe-load-any-extension=no

# Python version
py-version=3.13

[MESSAGES CONTROL]
# Disable specific warnings
disable=
    # Not relevant for this project or covered by other tools
    missing-module-docstring,
    missing-class-docstring,
    missing-function-docstring,
    # Black handles formatting
    line-too-long,
    # Allow TODO comments
    fixme,
    # Windows-specific imports are conditional
    import-error,
    # Type checking is done by mypy
    no-member,
    unsubscriptable-object,
    unsupported-membership-test,
    not-an-iterable,
    invalid-name,
    # Test code issues (unused fixtures, duplicate mock setups, etc.)
    duplicate-code,
    too-many-public-methods,
    too-many-positional-arguments,
    unused-argument,
    unused-variable,

[REPORTS]
# Set the output format
output-format=colorized

# Evaluation report
reports=yes

# Expression which should return a score less than or equal to 10
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Template used to display messages
msg-template={path}:{line}:{column}: {msg_id}: {msg} ({symbol})

# Activate the evaluation score
score=yes

[BASIC]
# Good variable names which should always be accepted
good-names=i,j,k,ex,Run,_,e,f,id,ip,fd,db,dn,cn,fs,os,ls,gp

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,50}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{1,50}$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{1,50}$

# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{1,50}$

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{1,50}|(__.*__))$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,50}$

[FORMAT]
# Maximum number of characters on a single line (Black default)
max-line-length=88

# Maximum number of lines in a module
max-module-lines=5000

# String used as indentation unit (4 spaces)
indent-string='    '

# Expected format of line ending
expected-line-ending-format=CRLF

[DESIGN]
# Maximum number of arguments for function / method
max-args=10

# Maximum number of attributes for a class
max-attributes=15

# Maximum number of boolean expressions in an if statement
max-bool-expr=5

# Maximum number of branch for function / method body
max-branches=15

# Maximum number of locals for function / method body
max-locals=20

# Maximum number of parents for a class
max-parents=7

# Maximum number of public methods for a class
max-public-methods=25

# Maximum number of return / yield for function / method body
max-returns=10

# Maximum number of statements in function / method body
max-statements=75

# Minimum number of public methods for a class
min-public-methods=0

[LOGGING]
# Format style used to check logging format string
logging-format-style=old

[TYPECHECK]
# List of members which are set dynamically
generated-members=

# Tells whether missing members accessed in mixin class should be ignored
ignore-mixin-members=yes

# List of decorators that produce context managers
contextmanager-decorators=contextlib.contextmanager

[SIMILARITIES]
# Minimum lines number of a similarity
min-similarity-lines=6

# Ignore imports when computing similarities
ignore-imports=yes

# Ignore docstrings when computing similarities
ignore-docstrings=yes

# Ignore comments when computing similarities
ignore-comments=yes

# Ignore signatures when computing similarities
ignore-signatures=yes

[VARIABLES]
# Tells whether we should check for unused import in __init__ files
init-import=no

# A regular expression matching the name of dummy variables
dummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_

# List of additional names supposed to be defined in builtins
additional-builtins=

[CLASSES]
# List of method names used to declare instance attributes
defining-attr-methods=__init__,__new__,setUp,__post_init__

# List of valid names for the first argument in a class method
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method
valid-metaclass-classmethod-first-arg=mcs

[IMPORTS]
# Allow wildcard imports from modules that define __all__
allow-wildcard-with-all=no

[EXCEPTIONS]
# Exceptions that will emit a warning when being caught
overgeneral-exceptions=builtins.BaseException,builtins.Exception

